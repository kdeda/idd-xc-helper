//
//  Project+Sparkle.swift
//  xchelper
//
//  Created by Klajd Deda on 11/13/20.
//

import Foundation
import Log4swift
import SwiftCommons

// MARK: - Project (Sparkle) -
extension Project {
    // we will use SSH without keys to manipulate files
    //
    var sparkleSSHUserName: String {
        if bundleIdentifier.hasPrefix("com.id-design") {
            return "kdeda@id-design.com"
        } else if bundleIdentifier.hasPrefix("com.other") {
            return "clyde@other.com"
        }
        return "kdeda@id-design.com"
    }
    
    var sparkleCompanyName: String {
        if bundleIdentifier.hasPrefix("com.id-design") {
            return "ID-Design"
        } else if bundleIdentifier.hasPrefix("com.other") {
            return "Other"
        }
        return "ID-Design"
    }
    
    var sparkleApacheServerURL: URL {
        if bundleIdentifier.hasPrefix("com.id-design") {
            return URL(string: "/var/www/www.whatsizemac.com/software")!.appendingPathComponent(configName.lowercased())
        } else if bundleIdentifier.hasPrefix("com.other") {
            return URL(string: "/var/www/www.other.com/software")!.appendingPathComponent(configName.lowercased())
        }
        return URL(string: "/var/www/www.whatsizemac.com/software")!.appendingPathComponent(configName.lowercased())
    }
    
    var sparkleServerURL: URL {
        if bundleIdentifier.hasPrefix("com.id-design") {
            return URL(string: "https://www.whatsizemac.com/software")!.appendingPathComponent(configName.lowercased())
        } else if bundleIdentifier.hasPrefix("com.other") {
            return URL(string: "https://www.other.com/software")!.appendingPathComponent(configName.lowercased())
        }
        return URL(string: "https://www.whatsizemac.com/software")!.appendingPathComponent(configName.lowercased())
    }
    
    var sparkleEnclosure: String {
        let output = Process.fetchString(taskURL: Config.SPARKLE_SIGN, arguments: [pathToTGZ.path])
        Log4swift[Self.self].info(output)
        
        // output will contain a string in the form
        // sparkle:edSignature="wWhIamodvcYgxhTGqyLJ56WCr4Hl9VXSJWlkOzBlW8tNCtpkIOoTJlwui08EE/9F2oEltal6pNZZP8NXbHtPDA==" length="10101732"
        let packageNameAndVersion = "\(packageName)_\(bundleShortVersionString).tgz".lowercased()
        let url = sparkleServerURL.appendingPathComponent(packageNameAndVersion)
        
        if output.hasPrefix("sparkle:edSignature") {
            let edSignature = output.trimmingCharacters(in: CharacterSet.newlines)
            
            return "url=\"\(url.absoluteString)\" sparkle:version=\"\(bundleVersion)\" sparkle:shortVersionString=\"\(bundleShortVersionString)\" \(edSignature) type=\"application/octet-stream\"";
        }
        return "url=\"\(url.absoluteString)\" sparkle:version=\"\(bundleVersion)\" sparkle:shortVersionString=\"\(bundleShortVersionString)\" type=\"application/octet-stream\"";
    }
    
    // ie: Tue, 13 September 2011
    //
    var sparkleReleaseDate: String {
        let today = Date.init()
        return today.string(withFormat: "EEE, MMMM d, yyyy")
    }
    
    var sparkleApplicationReleaseURL: URL {
        if bundleIdentifier.hasPrefix("com.id-design") {
            return URL.iddHomeDirectory.appendingPathComponent("Development/git.id-design.com/whatsize7/WhatSize/release")
        } else if bundleIdentifier.hasPrefix("com.other") {
            return URL.iddHomeDirectory.appendingPathComponent("Development/git.id-design.com/other/Applications/Other/release")
        }
        return URL.iddHomeDirectory.appendingPathComponent("Development/git.id-design.com/whatsize7/WhatSize/release")
    }
    
    var notes_xml: String {
        var rv = ""
        
        rv += "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
        rv += "<!--\n"
        rv += "    autogenerated \(Date.init().description)\n"
        rv += "-->\n"
        rv += "<rss version=\"2.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:sparkle=\"http://www.andymatuschak.org/xml-namespaces/sparkle\">\n"
        rv += "    <channel>\n"
        rv += "        <title>\(packageName) Change Log</title>\n"
        rv += "        <link>\(sparkleServerURL)/release/notes.xml</link>\n"
        rv += "        <description>Most recent changes with links to updates.</description>\n"
        rv += "        <language>en</language>\n"
        rv += "        <item>\n"
        rv += "            <title>Version \(bundleShortVersionString)</title>\n"
        rv += "            <sparkle:releaseNotesLink>\(sparkleServerURL)/release/notes.html</sparkle:releaseNotesLink>\n"
        rv += "            <pubDate>\(sparkleReleaseDate) 12:01:01 -0600</pubDate>\n"
        rv += "            <enclosure \(sparkleEnclosure) />\n"
        rv += "        </item>\n"
        rv += "    </channel>\n"
        rv += "</rss>\n"
        return rv
    }
    
    var sparklecast_xml: String {
        var rv = ""
        
        rv += "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
        rv += "<!--\n"
        rv += "    autogenerated \(Date.init().description)\n"
        rv += "-->\n"
        rv += "<!-- use a more friendly rss feed, the sparkle thing breaks the FireFox reader -->\n"
        rv += "<rss version=\"2.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:sparkle=\"http://www.andymatuschak.org/xml-namespaces/sparkle\">\n"
        rv += "    <channel>\n"
        rv += "        <title>\(packageName) Change Log</title>\n"
        rv += "        <link>\(sparkleServerURL)/release/notes.xml</link>\n"
        rv += "        <description>Most recent changes with links to updates.</description>\n"
        rv += "        <language>en</language>\n"
        rv += "        <item>\n"
        rv += "            <title>\(sparkleCompanyName) ships \(packageName) \(bundleShortVersionString)</title>\n"
        rv += "            <link>\(sparkleServerURL)/release/notes.html</link>\n"
        rv += "            <description><![CDATA[\(sparkleCompanyName), a long time developer of Mac OS X software, today announced the release and immediate availability of \(packageName) \(bundleShortVersionString)]]></description>\n"
        rv += "            <sparkle:releaseNotesLink>\(sparkleServerURL)/release/notes.html</sparkle:releaseNotesLink>\n"
        rv += "            <pubDate>\(sparkleReleaseDate) 12:01:01 -0600</pubDate>\n"
        rv += "            <enclosure \(sparkleEnclosure) />\n"
        rv += "        </item>\n"
        rv += "    </channel>\n"
        rv += "</rss>\n"
        return rv
    }
    
}
